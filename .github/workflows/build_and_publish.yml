# .github/workflows/build_and_publish.yml

name: Build and Publish to PyPI
on:
  push:
    branches:
      - main

# by default, permissions are read-only, read + write is required for git pushes
permissions: write-all

env:
  PIP_DEFAULT_TIMEOUT: 60
  PIP_RETRIES: 5

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: ASDF Parse
        uses: kota65535/github-asdf-parse-action@v2.0.0
        id: versions

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ steps.versions.outputs.python }}"

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: "${{ steps.versions.outputs.poetry }}"

      - name: Install dependencies
        run: |
          poetry install

      - name: Make sure it runs
        run: |
          DIGEST_DESTINATION="" poetry run ${{ github.event.repository.name }} --help

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.github_token }}
          version-file: "./pyproject.toml"
          version-path: "tool.poetry.version"
          fallback-version: "1.0.0"
          output-file: "CHANGELOG.md"

      # NOTE must run after versioning otherwise the right version won't be pushed
      - name: Build distribution package
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          poetry build

      - name: Publish to PyPI
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        run: |
          # `gh secret set PYPI_API_TOKEN --app actions --body $PYPI_API_TOKEN`
          poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}

      - name: Github Release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: softprops/action-gh-release@v2
        with:
          # output options: https://github.com/TriPSs/conventional-changelog-action#outputs
          body: ${{ steps.changelog.outputs.clean_changelog }}
          tag_name: ${{ steps.changelog.outputs.tag }}

      - name: Login to GitHub Container Registry
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: iloveitaly/github-action-nixpacks@main
        with:
          platforms: "linux/amd64,linux/arm64"
          push: true
